# cmake -S ./ -B ./build/ -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release
cmake_minimum_required(VERSION 3.17)
project(opengl)

set(CMAKE_CXX_COMPILER g++)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -O2 -Wextra -Wall -Wno-pragmas")

# Copy lib and ini file
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/glfw3.dll DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/libassimp-5.dll DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/config.ini DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/imgui.ini DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

# Copy Assets
execute_process(
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${CMAKE_CURRENT_SOURCE_DIR}/model
        ${CMAKE_CURRENT_BINARY_DIR}/model
)
execute_process(
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${CMAKE_CURRENT_SOURCE_DIR}/src/image
        ${CMAKE_CURRENT_BINARY_DIR}/src/image
)
execute_process(
    COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${CMAKE_CURRENT_SOURCE_DIR}/src/fonts
        ${CMAKE_CURRENT_BINARY_DIR}/src/fonts
)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/src/shaders.glsl DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/src)
# Image file...

# Source files
set(SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
file(GLOB_RECURSE SOURCES "${SRC_DIR}/*.c" "${SRC_DIR}/*.cc" "${SRC_DIR}/*.cpp" "${SRC_DIR}/*.h" "${SRC_DIR}/*.hpp")
add_executable(${PROJECT_NAME} ${SOURCES})
target_include_directories(${PROJECT_NAME} PRIVATE "${SRC_DIR}")

set(LIB_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include")
target_include_directories(${PROJECT_NAME} PRIVATE "${LIB_DIR}/")

target_link_libraries(${PROJECT_NAME}
    ${CMAKE_CURRENT_SOURCE_DIR}/lib/libfreetype.a
    ${CMAKE_CURRENT_SOURCE_DIR}/lib/libglad.a
    ${CMAKE_CURRENT_SOURCE_DIR}/lib/libglfw3dll.a
    ${CMAKE_CURRENT_SOURCE_DIR}/lib/libassimp.dll.a
)
